xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
Spring Boot
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

===================================================
Getting Started
===================================================
Download from https://docs.spring.io/spring-boot/docs/current/reference/html/getting-started-installing-spring-boot.html#getting-started-installing-the-cli
Run java -version and check if JDK version is > 1.8
Create SPRING_HOME environment variable to the folder and add %SPRING_HOME%/bin to PATH
Run spring --version and check if it's ok.
Create project by running: spring init --build maven --groupId com.redhat.examples --version 1.0 --java-version 1.8 --dependencies web --name hola-springboot hola-springboot

===================================================
Running the project
===================================================
Go to the project directory (hola-springboot) and run mvn spring-boot:run
Go to http://localhost:8080 

===================================================
How to Run This Outside of Maven?
===================================================

mvn clean package
java -jar target/hola-springboot-1.0.jar

mvn clean install spring-boot:run -Dserver.port=9090

===================================================
Run backend project with embedded Jetty
===================================================
mvn clean install jetty:run


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
The Dropwizard Stack
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Dropwizard provides some very intuitive abstractions on top of
these powerful libraries to make it very easy to write productionready
microservices:
• Jetty for the servlet container
• Jersey for the REST/JAX-RS implementation
• Jackson for JSON serialization/deserialization
• Hibernate Validator
• Guava
• Metrics
• Logback + SLF4J
• JDBI for dealing with databases

===================================================
Getting Started
===================================================
 mvn -B archetype:generate -DarchetypeGroupId=io.dropwizard.archetypes -DarchetypeArtifactId=java-simple -DarchetypeVersion=0.9.2 -DgroupId=com.redhat.examples.dropwizard -DartifactId=hola-dropwizard -Dversion=1.0 -Dname=HolaDropwizard
 
 Enter the directory created and run mvn clean install
 
===================================================
Running Dropwizard like Spring Boot
===================================================
One plug-in we do want to add is the exec-maven-plugin. With
Spring Boot we were able to just run our microservice with mvn
spring-boot:run. We want to be able to do the same thing with our
Dropwizard application, so let’s add the following plug-in within the
<build> section of the pom.xml

<plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>exec-maven-plugin</artifactId>
	<configuration>
		<mainClass>
		com.redhat.examples.dropwizard.HolaDropwizardApplication
		</mainClass>
		<arguments>
			<argument>server</argument>
		</arguments>
	</configuration>
</plugin>

Now we can execute our application from the command line like
this:
$ mvn exec:java

App: http://localhost:8080
Adm: http://localhost:8081

